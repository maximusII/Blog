{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _taggedTemplateLiteral from \"@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"C:\\\\Coding\\\\TestTaskByDevelopsToday\\\\Blog\\\\pages\\\\index.tsx\";\nvar __jsx = React.createElement;\n\nfunction _templateObject3() {\n  var data = _taggedTemplateLiteral([\"\\n    display: flex;\\n    justify-content: center;\\n\"]);\n\n  _templateObject3 = function _templateObject3() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject2() {\n  var data = _taggedTemplateLiteral([\"\\n    color: blue;\\n    padding-right: 10px;\\n    padding-left: 10px;\\n    cursor: pointer;\\n\\n    &:hover {\\n        color: red;\\n    }\\n\"]);\n\n  _templateObject2 = function _templateObject2() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n    font-family: roboto;\\n    text-align: center;\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React from 'react';\nimport { Layout } from '../components/MyLayout';\nimport Link from 'next/link';\nimport * as Fetcher from '../helpers/fetcher';\nimport styled from 'styled-components';\nvar Title = styled.h1(_templateObject());\nvar LinkStyle = styled.a(_templateObject2());\nvar StyledWrapper = styled.div(_templateObject3());\n\nvar Index = function Index(props) {\n  return __jsx(Layout, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }, __jsx(Title, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }, \"Latest Posts\"), __jsx(StyledWrapper, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }, __jsx(\"ul\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }, props.posts.map(function (post) {\n    return __jsx(\"li\", {\n      key: post.id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }, __jsx(Link, {\n      href: \"/posts/[id]\",\n      as: \"/posts/\".concat(post.id),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }, __jsx(LinkStyle, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }, post.title)), __jsx(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }, post.body));\n  }))));\n};\n\nIndex.getInitialProps = function _callee(Context) {\n  return _regeneratorRuntime.async(function _callee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          return _context.abrupt(\"return\", Fetcher.get());\n\n        case 1:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, null, Promise);\n};\n\nexport default Index;","map":{"version":3,"sources":["C:/Coding/TestTaskByDevelopsToday/Blog/pages/index.tsx"],"names":["React","Layout","Link","Fetcher","styled","Title","h1","LinkStyle","a","StyledWrapper","div","Index","props","posts","map","post","id","title","body","getInitialProps","Context","get"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,SAASC,MAAT,QAAuB,wBAAvB;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,OAAO,KAAKC,OAAZ,MAAyB,oBAAzB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AAEA,IAAMC,KAAK,GAAGD,MAAM,CAACE,EAAV,mBAAX;AAKA,IAAMC,SAAS,GAAGH,MAAM,CAACI,CAAV,oBAAf;AAWA,IAAMC,aAAa,GAAGL,MAAM,CAACM,GAAV,oBAAnB;;AAKA,IAAMC,KAAwB,GAAG,SAA3BA,KAA2B,CAAAC,KAAK,EAAI;AACtC,SACI,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,MAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADJ,EAEI,MAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKA,KAAK,CAACC,KAAN,CAAYC,GAAZ,CAAgB,UAAAC,IAAI;AAAA,WACjB;AAAI,MAAA,GAAG,EAAEA,IAAI,CAACC,EAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,MAAC,IAAD;AAAM,MAAA,IAAI,EAAC,aAAX;AAAyB,MAAA,EAAE,mBAAYD,IAAI,CAACC,EAAjB,CAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,MAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAYD,IAAI,CAACE,KAAjB,CADJ,CADJ,EAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAIF,IAAI,CAACG,IAAT,CAJJ,CADiB;AAAA,GAApB,CADL,CADJ,CAFJ,CADJ;AAiBH,CAlBD;;AAwBAP,KAAK,CAACQ,eAAN,GAAwB,iBAAMC,OAAN;AAAA;AAAA;AAAA;AAAA;AAAA,2CACbjB,OAAO,CAACkB,GAAR,EADa;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAxB;;AAIA,eAAeV,KAAf","sourcesContent":["import React from 'react';\r\nimport { NextPage, NextPageContext } from 'next';\r\nimport { Layout } from '../components/MyLayout';\r\nimport Link from 'next/link';\r\nimport * as Fetcher from '../helpers/fetcher';\r\nimport styled from 'styled-components';\r\n\r\nconst Title = styled.h1`\r\n    font-family: roboto;\r\n    text-align: center;\r\n`;\r\n\r\nconst LinkStyle = styled.a`\r\n    color: blue;\r\n    padding-right: 10px;\r\n    padding-left: 10px;\r\n    cursor: pointer;\r\n\r\n    &:hover {\r\n        color: red;\r\n    }\r\n`;\r\n\r\nconst StyledWrapper = styled.div`\r\n    display: flex;\r\n    justify-content: center;\r\n`;\r\n\r\nconst Index: NextPage<Context> = props => {\r\n    return (\r\n        <Layout>\r\n            <Title>Latest Posts</Title>\r\n            <StyledWrapper>\r\n                <ul>\r\n                    {props.posts.map(post => (\r\n                        <li key={post.id}>\r\n                            <Link href=\"/posts/[id]\" as={`/posts/${post.id}`}>\r\n                                <LinkStyle>{post.title}</LinkStyle>\r\n                            </Link>\r\n                            <p>{post.body}</p>\r\n                        </li>\r\n                    ))}\r\n                </ul>\r\n            </StyledWrapper>\r\n        </Layout>\r\n    );\r\n};\r\n\r\ninterface Context extends NextPageContext {\r\n    posts: Array<{ [key: string]: string | number }>;\r\n}\r\n\r\nIndex.getInitialProps = async Context => {\r\n    return Fetcher.get();\r\n};\r\n\r\nexport default Index;\r\n"]},"metadata":{},"sourceType":"module"}