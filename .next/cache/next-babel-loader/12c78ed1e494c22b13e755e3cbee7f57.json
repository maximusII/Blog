{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nvar _jsxFileName = \"C:\\\\Coding\\\\TestTaskByDevelopsToday\\\\Blog\\\\pages\\\\posts\\\\[id].tsx\";\nvar __jsx = React.createElement;\nimport React, { useRouter } from \"next/router\";\nimport * as Fetcher from \"../../helpers/fetcher\";\n\nvar Post = function Post(props) {\n  var router = useRouter(); // console.log(props);\n\n  return (// <Layout>\n    __jsx(\"ul\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 11\n      },\n      __self: this\n    }, props.posts.filter(function (post) {\n      return post.id === +router.query.id;\n    }).map(function (post) {\n      return __jsx(\"li\", {\n        key: post.id,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 18\n        },\n        __self: this\n      }, __jsx(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 19\n        },\n        __self: this\n      }, post.title), __jsx(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 20\n        },\n        __self: this\n      }, post.body));\n    })) // </Layout>\n\n  );\n};\n\nPost.getInitialProps = function _callee(Context) {\n  return _regeneratorRuntime.async(function _callee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          return _context.abrupt(\"return\", Fetcher.get());\n\n        case 1:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, null, Promise);\n};\n\nexport default Post;","map":{"version":3,"sources":["C:/Coding/TestTaskByDevelopsToday/Blog/pages/posts/[id].tsx"],"names":["React","useRouter","Fetcher","Post","props","router","posts","filter","post","id","query","map","title","body","getInitialProps","Context","get"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,aAAjC;AAGA,OAAO,KAAKC,OAAZ,MAAyB,uBAAzB;;AAEA,IAAMC,IAAuB,GAAG,SAA1BA,IAA0B,CAAAC,KAAK,EAAI;AACvC,MAAMC,MAAM,GAAGJ,SAAS,EAAxB,CADuC,CAEvC;;AACA,SACE;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGG,KAAK,CAACE,KAAN,CACEC,MADF,CAEG,UAACC,IAAD;AAAA,aACEA,IAAI,CAACC,EAAL,KAAY,CAACJ,MAAM,CAACK,KAAP,CAAaD,EAD5B;AAAA,KAFH,EAKEE,GALF,CAKM,UAACH,IAAD;AAAA,aACH;AAAI,QAAA,GAAG,EAAEA,IAAI,CAACC,EAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAID,IAAI,CAACI,KAAT,CADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAIJ,IAAI,CAACK,IAAT,CAFF,CADG;AAAA,KALN,CADH,CAFF,CAeE;;AAfF;AAiBD,CApBD;;AA4BAV,IAAI,CAACW,eAAL,GAAuB,iBAAMC,OAAN;AAAA;AAAA;AAAA;AAAA;AAAA,2CACdb,OAAO,CAACc,GAAR,EADc;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAvB;;AAIA,eAAeb,IAAf","sourcesContent":["import React, { useRouter } from \"next/router\";\r\nimport { NextPage, NextPageContext } from \"next\";\r\nimport Layout from \"../../components/MyLayout\";\r\nimport * as Fetcher from \"../../helpers/fetcher\";\r\n\r\nconst Post: NextPage<Context> = props => {\r\n  const router = useRouter();\r\n  // console.log(props);\r\n  return (\r\n    // <Layout>\r\n    <ul>\r\n      {props.posts\r\n        .filter(\r\n          (post: { [key: string]: string | number }) =>\r\n            post.id === +router.query.id\r\n        )\r\n        .map((post: { [key: string]: string | number }) => (\r\n          <li key={post.id}>\r\n            <p>{post.title}</p>\r\n            <p>{post.body}</p>\r\n          </li>\r\n        ))}\r\n    </ul>\r\n    // </Layout>\r\n  );\r\n};\r\n\r\ninterface Context extends NextPageContext {\r\n  posts: Array<{ [key: string]: string | number }>;\r\n  // posts: { post: Array<{ [key: string]: string | number }> };\r\n  // url: { [key: string]: any };\r\n}\r\n\r\nPost.getInitialProps = async Context => {\r\n  return Fetcher.get();\r\n};\r\n\r\nexport default Post;\r\n"]},"metadata":{},"sourceType":"module"}