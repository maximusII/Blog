{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _taggedTemplateLiteral from \"@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"C:\\\\Coding\\\\TestTaskByDevelopsToday\\\\Blog\\\\pages\\\\index.tsx\";\nvar __jsx = React.createElement;\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  text-align: center;\\n  color: red;\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport Layout from \"../components/MyLayout\";\nimport React from \"react\";\nimport * as Fetcher from \"../helpers/fetcher\";\nimport styled from \"styled-components\";\nvar Title = styled.h1(_templateObject());\n\nvar Index = function Index(props) {\n  return __jsx(Layout, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15\n    },\n    __self: this\n  }, __jsx(Title, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16\n    },\n    __self: this\n  }, \"Latest Posts\"));\n}; // Index.getInitialProps = function() {\n//   return Fetcher.get();\n// };\n\n\nIndex.getInitialProps = function _callee(ctx) {\n  return _regeneratorRuntime.async(function _callee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          return _context.abrupt(\"return\", Fetcher.get());\n\n        case 1:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, null, Promise);\n};\n\nexport default Index;","map":{"version":3,"sources":["C:/Coding/TestTaskByDevelopsToday/Blog/pages/index.tsx"],"names":["Layout","React","Fetcher","styled","Title","h1","Index","props","getInitialProps","ctx","get"],"mappings":";;;;;;;;;;;;;;;AAAA,OAAOA,MAAP,MAAmB,wBAAnB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAGA,OAAO,KAAKC,OAAZ,MAAyB,oBAAzB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AAEA,IAAMC,KAAK,GAAGD,MAAM,CAACE,EAAV,mBAAX;;AAKA,IAAMC,KAAiC,GAAG,SAApCA,KAAoC,CAAAC,KAAK,EAAI;AACjD,SACE,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,CADF;AAeD,CAhBD,C,CAkBA;AACA;AACA;;;AAMAD,KAAK,CAACE,eAAN,GAAwB,iBAAOC,GAAP;AAAA;AAAA;AAAA;AAAA;AAAA,2CACfP,OAAO,CAACQ,GAAR,EADe;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAxB;;AAIA,eAAeJ,KAAf","sourcesContent":["import Layout from \"../components/MyLayout\";\r\nimport React from \"react\";\r\nimport { NextPage, NextPageContext } from \"next\";\r\nimport Link from \"next/link\";\r\nimport * as Fetcher from \"../helpers/fetcher\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Title = styled.h1`\r\n  text-align: center;\r\n  color: red;\r\n`;\r\n\r\nconst Index: NextPage<MyPropsInterface> = props => {\r\n  return (\r\n    <Layout>\r\n      <Title>Latest Posts</Title>\r\n      {/* <ul>\r\n        {props.posts.map(post => (\r\n          <li key={post.id}>\r\n            <Link href=\"/posts/[id]\" as={`/posts/${post.id}`}>\r\n              <a>{post.title}</a>\r\n            </Link>\r\n            <p>{post.body}</p>\r\n          </li>\r\n        ))}\r\n      </ul> */}\r\n    </Layout>\r\n  );\r\n};\r\n\r\n// Index.getInitialProps = function() {\r\n//   return Fetcher.get();\r\n// };\r\n\r\ninterface Context extends NextPageContext {\r\n  // any modifications to the default context, e.g. query types\r\n}\r\n\r\nIndex.getInitialProps = async (ctx: Context) => {\r\n  return Fetcher.get();\r\n};\r\n\r\nexport default Index;\r\n"]},"metadata":{},"sourceType":"module"}