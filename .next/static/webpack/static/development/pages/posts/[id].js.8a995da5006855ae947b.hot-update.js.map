{"version":3,"file":"static/webpack/static\\development\\pages\\posts\\[id].js.8a995da5006855ae947b.hot-update.js","sources":["webpack:///./pages/posts/.tsx"],"sourcesContent":["import React from 'react';\r\nimport { useRouter } from 'next/router';\r\nimport { NextPage, NextPageContext } from 'next';\r\nimport { Layout } from '../../components/MyLayout';\r\nimport * as Fetcher from '../../helpers/fetcher';\r\nimport styled from 'styled-components';\r\n\r\nconst Title = styled.p`\r\n    font-weight: bold;\r\n`;\r\n\r\nconst StyledWrapperUL = styled.ul`\r\n    text-align: center;\r\n    list-style-type: none;\r\n    padding: 0;\r\n`;\r\n\r\nconst StyledWrapperLI = styled.li`\r\n    padding: 10px;\r\n    text-align: center;\r\n    border-radius: 5px;\r\n    margin: 55px auto;\r\n    box-shadow: 5px 10px 5px rgba(0, 0, 0, 0.1);\r\n    width: 70%;\r\n    overflow-wrap: break-word;\r\n`;\r\n\r\nconst Post: NextPage<Context> = props => {\r\n    const router = useRouter();\r\n    return (\r\n        <Layout>\r\n            <StyledWrapperUL>\r\n                {props.posts\r\n                    .filter((post: { [key: string]: string | number }) => post.id === +router.query.id)\r\n                    .map((post: { [key: string]: string | number }) => (\r\n                        <StyledWrapperLI key={post.id}>\r\n                            <p>{post.title}</p>\r\n                            <p>{post.body}</p>\r\n                        </StyledWrapperLI>\r\n                    ))}\r\n            </StyledWrapperUL>\r\n        </Layout>\r\n    );\r\n};\r\n\r\ninterface Context extends NextPageContext {\r\n    posts: Array<{ [key: string]: string | number }>;\r\n}\r\n\r\nPost.getInitialProps = async Context => {\r\n    return Fetcher.get();\r\n};\r\n\r\nexport default Post;\r\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AAEA;AACA;AACA;AAEA;AAIA;AAMA;AACA;AASA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAHA;AASA;AACA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAGA;;;;A","sourceRoot":""}